# Generated by Django 5.0.3 on 2024-03-19 20:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Dia",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Empresa",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("foto", models.CharField(blank=True, max_length=200, null=True)),
                ("cep", models.CharField(blank=True, max_length=200, null=True)),
                ("nome", models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("celular", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("G", "Gerente"),
                            ("F", "Funcionario"),
                            ("C", "Cliente"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DiaSemanaFuncionario",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("horaIncial", models.TimeField()),
                ("horaFinal", models.TimeField()),
                (
                    "dia",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agenda.dia",
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Servico",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(blank=True, max_length=200, null=True)),
                ("descricao", models.CharField(blank=True, max_length=200, null=True)),
                ("valor", models.FloatField()),
                ("tempoSevico", models.TimeField()),
                ("intervalo", models.TimeField()),
                (
                    "empresa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agenda.empresa",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Agenda",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("create_data", models.DateTimeField(auto_now_add=True)),
                ("data_inicio", models.DateTimeField()),
                ("data_final", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("M", "Marcado"),
                            ("P", "Programado"),
                            ("E", "Executado"),
                            ("C", "Cancelado"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "servico",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agenda.servico",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicoFuncionario",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "funcionario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "servico",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="agenda.servico",
                    ),
                ),
            ],
        ),
    ]
